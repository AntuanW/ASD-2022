def path(A):
    n = len(A)
    F = [[0 for _ in range(n)] for _ in range(n)]
    P = [[0 for _ in range(n)] for _ in range(n)]
    P[0][0] = (-1, -1)
    for i in range(1, n):
        F[i][0] = A[i][0] + F[i-1][0]
        F[0][i] = A[0][i] + F[0][i-1]
        P[i][0] = (i-1, 0)
        P[0][i] = (0, i-1)

    for i in range(1, n):
        for j in range(1, n):
            if F[i-1][j] < F[i][j-1]:
                F[i][j] = F[i-1][j] + A[i][j]
                P[i][j] = (i-1, j)
            else:
                F[i][j] = F[i][j-1] + A[i][j]
                P[i][j] = (i, j-1)

    res = [(n-1, n-1)]
    curr = P[n-1][n-1]
    while curr != (-1, -1):
        res.append(curr)
        curr = P[curr[0]][curr[1]]
    return res[::-1]


"""A = [
    [0, 1, 6, 8, 7, 3, 4, 9, 5, 2],
    [0, 2, 3, 5, 6, 8, 1, 4, 9, 7],
    [9, 3, 8, 5, 4, 1, 0, 7, 2, 6],
    [8, 7, 1, 4, 2, 0, 3, 5, 9, 6],
    [7, 1, 5, 6, 9, 4, 3, 8, 2, 0],
    [1, 9, 0, 7, 3, 8, 6, 2, 4, 5],
    [1, 3, 2, 9, 4, 0, 5, 7, 6, 8],
    [8, 6, 1, 7, 5, 2, 0, 4, 3, 9],
    [9, 5, 6, 0, 3, 1, 8, 7, 4, 2],
    [9, 8, 0, 6, 7, 3, 4, 5, 2, 1],
]"""

A = [
    [0, 0, 6, 8, 7, 3, 4, 9, 5, 2],
    [0, 2, 0, 0, 6, 8, 1, 4, 9, 7],
    [9, 3, 8, 0, 4, 1, 0, 7, 2, 6],
    [8, 7, 1, 0, 0, 0, 3, 5, 9, 6],
    [7, 1, 5, 6, 9, 4, 3, 8, 2, 0],
    [1, 9, 0, 7, 0, 0, 6, 2, 4, 5],
    [1, 3, 2, 9, 4, 0, 5, 7, 6, 8],
    [8, 6, 1, 7, 5, 0, 0, 4, 3, 9],
    [9, 5, 6, 0, 3, 1, 0, 7, 4, 2],
    [9, 8, 0, 6, 7, 3, 0, 5, 2, 1],
]

print(path(A))